Brandon Strong
Nathan Robertus

1) The output is '(4 2 5 2 6 10).

2) The function adds one to every element of the list

3) This line checks to see if the list is null

4) This line outputss an empty list

5) This line adds one to the first element in the list and recursively calls f again with
   a list of everything after the first value and will build pars of numbers that have
   one added to them.

6) Here is lst for every recursive call:

recurse 1: (3 1 4 1 5 9)
recurse 2: (1 4 1 5 9)
recurse 3: (4 1 5 9)
recurse 4: (1 5 9)
recurse 5: (5 9)
recurse 6: (9)
recurse 7: ()

7) the output is #f becaus 'one isnt the same as 1.

8) Our member? function is head recursive because the last thing it sees is either a null
   list or an equal value

